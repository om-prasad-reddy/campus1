# ============================
# Application Name
# ============================
spring.application.name=campus1

# ============================
# Server (Main App)
# ============================
server.port=8081

server.tomcat.threads.max=500
server.tomcat.threads.min-spare=50
server.tomcat.accept-count=2000
server.tomcat.connection-timeout=20000

# ============================
# Database (MySQL + HikariCP)
# ============================
spring.datasource.url=jdbc:mysql://localhost:3306/campus?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=Anilp@2024
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.hikari.maximum-pool-size=200
spring.datasource.hikari.minimum-idle=50
spring.datasource.hikari.idle-timeout=60000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.pool-name=HikariPool-App

# ============================
# JPA / Hibernate
# ============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.jdbc.batch_size=1000
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.format_sql=false

# ============================
# File Upload
# ============================
spring.servlet.multipart.max-file-size=100MB
spring.servlet.multipart.max-request-size=200MB

# ============================
# Jackson JSON Config
# ============================
spring.jackson.date-format=yyyy-MM-dd
spring.jackson.time-zone=UTC
spring.jackson.serialization.write-dates-as-timestamps=false

# ============================
# Email Configuration
# ============================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=nagarjunajillaboina@gmail.com
spring.mail.password=urpy gqkn jcgm bswt
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# ============================
# OAuth2 (Google Calendar)
# ============================
spring.security.oauth2.client.registration.google.client-id=890464264806-du01h8k6dgadps6dr72hm6l84p7hbc3j.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8082/api/interview/callback
spring.security.oauth2.client.registration.google.scope=https://www.googleapis.com/auth/calendar.events
google.calendar.id=nagarjunacyetechnology@gmail.com

# ============================
# Async Configuration
# ============================
spring.task.execution.pool.core-size=200
spring.task.execution.pool.max-size=500
spring.task.execution.pool.queue-capacity=20000
spring.task.execution.pool.keep-alive=60s
spring.task.execution.pool.allow-core-thread-timeout=true
spring.task.execution.thread-name-prefix=Async-General-

# Notifications Executor
app.async.notifications.core-size=100
app.async.notifications.max-size=300
app.async.notifications.queue-capacity=20000
app.async.notifications.keep-alive=60s
app.async.notifications.thread-name-prefix=Async-Notify-

# Bulk Import Executor
app.async.bulk.core-size=50
app.async.bulk.max-size=200
app.async.bulk.queue-capacity=5000
app.async.bulk.keep-alive=60s
app.async.bulk.thread-name-prefix=Async-Bulk-

# ============================
# Spring Batch
# ============================
spring.batch.job.enabled=true
spring.batch.initialize-schema=never
spring.batch.jdbc.initialize-schema=never
spring.batch.jdbc.isolation-level-for-create=SERIALIZABLE
spring.batch.jdbc.max-rows=100000
spring.batch.jdbc.fetch-size=1000

# ============================
# Actuator Configuration
# ============================
management.endpoints.web.base-path=/actuator
management.endpoints.web.exposure.include=health,info,metrics,threaddump,env,beans,loggers,scheduledtasks,heapdump
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.metrics.tags.application=${spring.application.name}

# ============================
# Spring Boot Admin Server + Client
# ============================
# Monolithic app acts as both Admin Server and Client
spring.boot.admin.client.enabled=true
spring.boot.admin.client.instance.prefer-ip=true
spring.boot.admin.context-path=/admin
spring.boot.admin.client.url=http://localhost:8081/admin

# ============================
# Logging
# ============================
logging.level.org.springframework=INFO
logging.level.org.springframework.web=DEBUG
logging.level.de.codecentric.boot.admin=DEBUG
logging.level.com.campus1=DEBUG
logging.level.org.apache.coyote.http11=OFF
logging.level.org.apache.tomcat.util.net=ERROR
logging.file.name=logs/campus1-app.log
